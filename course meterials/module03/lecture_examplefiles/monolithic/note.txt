ssh ubuntu@10.212.175.41

sudo apt update && sudo apt upgrade -y

Install: Docker
sudo apt install apt-transport-https ca-certificates curl gnupg lsb-release -y

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

echo \
"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \
https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt update
sudo apt install docker-ce docker-ce-cli containerd.io -y


sudo systemctl start docker
sudo systemctl enable docker


sudo usermod -aG docker $USER

docker --version

Install: docker-compose
sudo curl -L "https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

sudo chmod +x /usr/local/bin/docker-compose

docker-compose --version


git clone <repo>

cd ~/dailyverse

nano .env
JWT_SECRET_KEY=your_secret_key_here


Modify docker-compose.yml

version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    env_file:
      - .env
    networks:
      - app-network
    ports:
      - "8080:8080"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - app-network
    ports:
      - "80:80"

networks:
  app-network:
    driver: bridge
  external-network:
    external: true


build docker image: 
docker-compose build

start docker container: 
docker-compose up -d


verify container are running: 
docker-compose ps

test the application: 
http://<ip address>

trouble shoot: 
docker-compose logs backend
docker-compose logs frontend
